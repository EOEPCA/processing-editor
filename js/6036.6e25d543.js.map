{"version":3,"file":"js/6036.6e25d543.js","mappings":"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","sources":["webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseReducer.vue","webpack://@openeo/web-editor/src/components/wizards/tabs/ChooseReducer.vue","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseReducer.vue?bf71","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseReducer.vue?822a","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?ff2a","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?8dc4","webpack://@openeo/web-editor/./src/components/datatypes/api.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"step choose-time\"},[_c('p',[_vm._v(_vm._s(_vm.text))]),_c('SelectBox',{attrs:{\"options\":_vm.options,\"value\":_vm.value},on:{\"input\":v => _vm.$emit('input', v)}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"step choose-time\">\n\t\t<p>{{ text }}</p>\n\t\t<SelectBox :options=\"options\" :value=\"value\" @input=\"v => $emit('input', v)\" />\n\t</div>\n</template>\n\n<script>\nimport SelectBox from '../../datatypes/SelectBox.vue';\nimport Utils from '../../../utils';\n\nexport default {\n\tname: 'ChooseReducer',\n\tcomponents: {\n\t\tSelectBox\n\t},\n\tprops: {\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\tdefault: \"Please select a method for aggregation:\"\n\t\t},\n\t\tallowEmpty: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\tdefault: \"mean\"\n\t\t}\n\t},\n\tcomputed: {\n\t\t...Utils.mapGetters(['processes']),\n\t\toptions() {\t\t\t\n\t\t\tlet reducers = this.processes\n\t\t\t\t.all()\n\t\t\t\t.filter(p => {\n\t\t\t\t\tif (Array.isArray(p.categories) && p.categories.includes(\"reducer\") && Array.isArray(p.parameters) && p.id !== 'array_element') {\n\t\t\t\t\t\tlet params = p.parameters.filter(param => param.optional !== true);\n\t\t\t\t\t\treturn (params.length === 1 && params[0].name === 'data');\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t\t.map(p => ({id: p.id, label: `${p.id} - ${p.summary}`}));\n\t\t\treducers.unshift({id: \"\", label: \"No composite\"});\n\t\t\treturn reducers;\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseReducer.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseReducer.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ChooseReducer.vue?vue&type=template&id=7923ec13\"\nimport script from \"./ChooseReducer.vue?vue&type=script&lang=js\"\nexport * from \"./ChooseReducer.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"select-container\"},[(_vm.loaded)?[_c('MultiSelect',{key:_vm.type,ref:\"htmlElement\",attrs:{\"label\":\"label\",\"track-by\":\"id\",\"multiple\":_vm.multiple,\"options\":_vm.selectOptions,\"allowEmpty\":false,\"preselectFirst\":_vm.preselect,\"disabled\":!_vm.editable,\"deselectLabel\":_vm.deselectLabel,\"taggable\":_vm.taggable,\"tagPlaceholder\":_vm.tagPlaceholder,\"openDirection\":_vm.openDirection},on:{\"tag\":_vm.addValue},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),(_vm.showDetails)?_c('button',{attrs:{\"type\":\"button\",\"title\":\"Details\"},on:{\"click\":function($event){return _vm.$emit('onDetails')}}},[_c('i',{staticClass:\"fas fa-info\"})]):_vm._e()]:_c('div',{staticClass:\"loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_vm._v(\" Loading options...\")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"select-container\">\n\t\t<template v-if=\"loaded\">\n\t\t\t<MultiSelect v-model=\"selected\" :key=\"type\" ref=\"htmlElement\" label=\"label\" track-by=\"id\" :multiple=\"multiple\" :options=\"selectOptions\" :allowEmpty=\"false\" :preselectFirst=\"preselect\" :disabled=\"!editable\" :deselectLabel=\"deselectLabel\" :taggable=\"taggable\" :tagPlaceholder=\"tagPlaceholder\" :openDirection=\"openDirection\" @tag=\"addValue\"></MultiSelect>\n\t\t\t<button v-if=\"showDetails\" type=\"button\" title=\"Details\" @click=\"$emit('onDetails')\"><i class=\"fas fa-info\"></i></button>\n\t\t</template>\n\t\t<div class=\"loading\" v-else><i class=\"fas fa-spinner fa-spin\"></i> Loading options...</div>\n\t</div>\n</template>\n\n<script>\nimport MultiSelect from 'vue-multiselect'\nimport Utils from '../../utils';\n\nexport default {\n\tname: 'SelectBox',\n\tcomponents: {\n\t\tMultiSelect\n\t},\n\tprops: {\n\t\tvalue: {},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: \"\"\n\t\t},\n\t\teditable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\toptions: {\n\t\t\ttype: [Array, Object]\n\t\t},\n\t\tschema: {\n\t\t\ttype: Object\n\t\t},\n\t\tcontext: {},\n\t\toptionFilter: {\n\t\t\ttype: Function,\n\t\t\tdefault: null\n\t\t},\n\t\topenDirection: {\n\t\t\ttype: String,\n\t\t\tdefault: 'auto'\n\t\t}\n\t},\n\tcomputed: {\n\t\tselectOptions() {\n\t\t\tlet state = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tlet collection = this.$store.state.collections.find(c => c.id == this.context);\n\t\t\t\t\tif (Utils.isObject(collection)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstate = collection.summaries['bands'].map(band => band.name);\n\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\tif (state.length === 0 && Utils.isObject(collection['cube:dimensions'])) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlet bandDimension = Object.values(collection['cube:dimensions']).find(d => d.type === 'bands');\n\t\t\t\t\t\t\t\tif (bandDimension && Array.isArray(bandDimension.values)) {\n\t\t\t\t\t\t\t\t\tstate = bandDimension.values;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\tstate = this.$store.state.collections;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'job-id':\n\t\t\t\t\tstate = this.$store.state.jobs.jobs;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\tstate = this.$store.state.files.files;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tstate = this.$store.state.editor.epsgCodes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'input-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getInputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tlet t = require('./api');\n\t\t\t\t\tlet types = {};\n\t\t\t\t\tfor(let native of t.NATIVE_TYPES) {\n\t\t\t\t\t\ttypes[native] = {type: native}\n\t\t\t\t\t}\n\t\t\t\t\tstate = Object.assign(types, t.API_TYPES);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'output-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getOutputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tstate = this.$store.state.serviceTypes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\tstate = this.$store.state.connection.capabilities().listPlans();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\t\tstate = Object.keys(this.$store.state.udfRuntimes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tstate = this.context in this.$store.state.udfRuntimes ? Object.keys(this.$store.state.udfRuntimes[this.context].versions) : [];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tstate = this.options;\n\t\t\t}\n\n\t\t\tif (typeof this.optionFilter === 'function' && state && typeof state === 'object') {\n\t\t\t\tif (Utils.isObject(state)) {\n\t\t\t\t\tstate = Object.fromEntries(Object.entries(state).filter(([key, value]) => this.optionFilter(value, key)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstate = state.filter((value, key) => this.optionFilter(value, key));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet data = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\treturn state.map(c => this.e(c.id)).sort(this.sortByLabel);\n\t\t\t\tcase 'job-id':\n\t\t\t\t\treturn state.map(j => ({\n\t\t\t\t\t\tid: j.id,\n\t\t\t\t\t\tlabel: Utils.getResourceTitle(j)\n\t\t\t\t\t})).sort(this.sortByLabel);\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tfor(let type in state) {\n\t\t\t\t\t\tlet schema = state[type];\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: type,\n\t\t\t\t\t\t\tlabel: schema.title || Utils.prettifyString(type),\n\t\t\t\t\t\t\tvalue: schema\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\treturn state.map(f => this.e(f.path)).sort((a, b) => Utils.sortByPath(a.id, b.id));\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: Number.parseInt(key, 10),\n\t\t\t\t\t\t\tlabel: key + \": \" + state[key]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'input-format':\n\t\t\t\tcase 'output-format':\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tlet id = key.toUpperCase(); // uppercase mostly for services\n\t\t\t\t\t\t// show title if available...\n\t\t\t\t\t\tlet label = state[key].title;\n\t\t\t\t\t\t// otherwise upper-cased key...\n\t\t\t\t\t\tif (!label) {\n\t\t\t\t\t\t\tlabel = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// and if title is different from key, also show key\n\t\t\t\t\t\telse if (id !== label.toUpperCase()) {\n\t\t\t\t\t\t\tlabel = `${label} - ${id}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.push({id, label});\n\t\t\t\t\t}\n\t\t\t\t\treturn data.sort(this.sortByLabel);\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\treturn state.map(p => ({\n\t\t\t\t\t\tid: p.name,\n\t\t\t\t\t\tlabel: p.name + (p.paid ? ' (paid)' : ' (free)')\n\t\t\t\t\t}));\n\t\t\t\tcase 'year':\n\t\t\t\t\tlet thisYear = new Date().getFullYear();\n\t\t\t\t\tlet years = Array.from({length: 100}, (x,i) => this.e(String(thisYear - i)));\n\t\t\t\t\t// Add custom years to select box\n\t\t\t\t\tif (typeof this.value === 'string' && this.value.length > 0 && years.findIndex(y => y.id === this.value) === -1) {\n\t\t\t\t\t\tvar customYear = this.e(this.value);\n\t\t\t\t\t\tif (this.value > thisYear) {\n\t\t\t\t\t\t\tyears.unshift(customYear);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tyears.push(this.e(this.value));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn years;\n\t\t\t\tcase 'band-name':\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\treturn state.map(val => this.e(val));\n\t\t\t\tdefault:\n\t\t\t\t\tif (Utils.isObject(this.schema) && this.schema.isEnum()) {\n\t\t\t\t\t\treturn this.schema.getEnumChoices().map(val => this.e(val));\n\t\t\t\t\t}\n\t\t\t\t\telse if (Array.isArray(this.options)) {\n\t\t\t\t\t\treturn this.options.map(val => {\n\t\t\t\t\t\t\tif (Utils.isObject(val)) {\n\t\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn this.e(val)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowDetails() {\n\t\t\treturn (this.type === 'collection-id');\n\t\t},\n\t\tdeselectLabel() {\n\t\t\treturn this.multiple ? 'Press enter to remove' : '';\n\t\t},\n\t\ttagPlaceholder() {\n\t\t\treturn this.type === 'year' ? 'Press enter to select' : 'Press enter to create a tag';\n\t\t},\n\t\tmultiple() {\n\t\t\treturn (this.type === 'file-paths');\n\t\t},\n\t\ttaggable() {\n\t\t\tlet freeInputIfEmpty = ['band-name', 'collection-id', 'job-id', 'input-format', 'output-format'];\n\t\t\treturn (this.type === 'year' || (this.selectOptions.length === 0 && freeInputIfEmpty.includes(this.type)));\n\t\t},\n\t\tpreselect() {\n\t\t\tif (this.multiple) {\n\t\t\t\treturn (!Array.isArray(this.selected) || this.selected.length === 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn (this.selected === null);\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tselected: null,\n\t\t\tloaded: false\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.loadData();\n\t},\n\twatch: {\n\t\ttype() {\n\t\t\tthis.loadData();\n\t\t},\n\t\tselected(newValue) {\n\t\t\tlet value;\n\t\t\tif (newValue === null) {\n\t\t\t\tvalue = null;\n\t\t\t}\n\t\t\telse if (this.multiple) {\n\t\t\t\tif (!Array.isArray(newValue)) {\n\t\t\t\t\tnewValue = [newValue];\n\t\t\t\t}\n\t\t\t\tvalue = newValue.map(v => v.id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'epsg-code':\n\t\t\t\t\t\tvar num = Number.parseInt(newValue.id);\n\t\t\t\t\t\tvalue = Number.isNaN(num) ? null : num;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\t\tvalue = newValue.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tvalue = String(newValue.id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalue = newValue.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$emit('input', value);\n\t\t},\n\t\tcontext() {\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.preselectFirst();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.loadData();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\t...Utils.mapActions(['describeCollection']),\n\t\t...Utils.mapActions('editor', ['loadEpsgCodes']),\n\t\t// Convert a value to a option object for MultiSelect\n\t\te(val) {\n\t\t\treturn {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t},\n\t\tasync loadData() {\n\t\t\tthis.loaded = false;\n\t\t\tif (this.type === 'epsg-code') {\n\t\t\t\tawait this.loadEpsgCodes();\n\t\t\t}\n\t\t\telse if (this.type === 'band-name') {\n\t\t\t\tawait this.describeCollection(this.context);\n\t\t\t}\n\t\t\tthis.initSelection();\n\t\t\tthis.loaded = true;\n\t\t},\n\t\tasync preselectFirst() {\n\t\t\tawait this.$nextTick();\n\t\t\t// Preselect first element if nothing else is set.\n\t\t\tlet elem = this.$refs.htmlElement;\n\t\t\t// Code inspired from mounted() method in vue-multiselect's multiselectMixin.js\n\t\t\tif (elem.preselectFirst && Array.isArray(elem.filteredOptions) && elem.filteredOptions.length) {\n\t\t\t\telem.select(elem.filteredOptions[0]);\n\t\t\t}\n\t\t},\n\t\tinitSelection() {\n\t\t\tlet value = typeof this.value === 'undefined' ? this.schema.default() : this.value;\n\t\t\tif (this.multiple && Array.isArray(value)) {\n\t\t\t\tthis.selected = this.selectOptions.filter(o => value.includes(o.id));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'input-format':\n\t\t\t\t\tcase 'output-format':\n\t\t\t\t\tcase 'service-type':\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tvalue = value.toUpperCase();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet selectedOption = this.selectOptions.find(o => o.id === value);\n\t\t\t\tif (selectedOption !== undefined) {\n\t\t\t\t\tthis.selected = selectedOption;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsortByLabel(a,b) {\n\t\t\treturn Utils.compareStringCaseInsensitive(a.label, b.label);\n\t\t},\n\t\taddValue(value) {\n\t\t\tthis.selected = this.e(value);\n\t\t}\n\t}\n}\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style lang=\"scss\">\n@import '../../../theme.scss';\n\n.select-container {\n\tdisplay: flex;\n\tflex-grow: 1;\n\n\t> div {\n\t\tflex-grow: 1;\n\t}\n\n\t> button {\n\t\tmargin-left: 10px;\n\t}\n\n\t.multiselect__option--selected.multiselect__option--highlight {\n\t\tbackground: $mainColor;\n\t}\n\t.multiselect__option--highlight, .multiselect__option--highlight:after {\n\t\tbackground: $mainColor;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SelectBox.vue?vue&type=template&id=45908431\"\nimport script from \"./SelectBox.vue?vue&type=script&lang=js\"\nexport * from \"./SelectBox.vue?vue&type=script&lang=js\"\nimport style0 from \"vue-multiselect/dist/vue-multiselect.min.css?vue&type=style&index=0&prod&lang=css&external\"\nimport style1 from \"./SelectBox.vue?vue&type=style&index=1&id=45908431&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Utils from '../../utils';\nexport const API_TYPES = Utils.resolveJsonRefs(require('@openeo/js-processgraphs/assets/subtype-schemas.json')).definitions;\nexport const NATIVE_TYPES = [\n\t'string',\n\t'integer',\n\t'number',\n\t'boolean',\n\t'array',\n\t'object'\n];"],"names":["render","_vm","this","_c","_self","staticClass","_v","_s","text","attrs","options","value","on","v","$emit","staticRenderFns","name","components","SelectBox","props","type","String","default","allowEmpty","Boolean","computed","Utils","mapGetters","reducers","processes","all","filter","p","Array","isArray","categories","includes","parameters","id","params","param","optional","length","map","label","summary","unshift","component","loaded","key","ref","multiple","selectOptions","preselect","editable","deselectLabel","taggable","tagPlaceholder","openDirection","addValue","model","selected","callback","$$v","expression","showDetails","$event","_e","MultiSelect","Object","schema","context","optionFilter","Function","state","collection","$store","collections","find","c","isObject","summaries","band","error","bandDimension","values","d","jobs","files","editor","epsgCodes","fileFormats","getInputTypes","t","require","types","native","NATIVE_TYPES","assign","API_TYPES","getOutputTypes","serviceTypes","connection","capabilities","listPlans","keys","udfRuntimes","versions","fromEntries","entries","data","e","sort","sortByLabel","j","getResourceTitle","push","title","prettifyString","f","path","a","b","sortByPath","Number","parseInt","toUpperCase","paid","thisYear","Date","getFullYear","years","from","x","i","findIndex","y","customYear","val","isEnum","getEnumChoices","freeInputIfEmpty","created","loadData","watch","newValue","num","isNaN","preselectFirst","methods","mapActions","loadEpsgCodes","describeCollection","initSelection","$nextTick","elem","$refs","htmlElement","filteredOptions","select","o","selectedOption","undefined","compareStringCaseInsensitive","resolveJsonRefs","definitions"],"sourceRoot":""}