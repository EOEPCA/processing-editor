{"version":3,"file":"js/9066.307c0825.js","mappings":"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","sources":["webpack://@openeo/web-editor/./src/components/datatypes/api.js","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?ff2a","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?8dc4","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseFormat.vue","webpack://@openeo/web-editor/src/components/wizards/tabs/ChooseFormat.vue","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseFormat.vue?9604","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseFormat.vue?365b"],"sourcesContent":["import Utils from '../../utils';\nexport const API_TYPES = Utils.resolveJsonRefs(require('@openeo/js-processgraphs/assets/subtype-schemas.json')).definitions;\nexport const NATIVE_TYPES = [\n\t'string',\n\t'integer',\n\t'number',\n\t'boolean',\n\t'array',\n\t'object'\n];","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"select-container\"},[(_vm.loaded)?[_c('MultiSelect',{key:_vm.type,ref:\"htmlElement\",attrs:{\"label\":\"label\",\"track-by\":\"id\",\"multiple\":_vm.multiple,\"options\":_vm.selectOptions,\"allowEmpty\":false,\"preselectFirst\":_vm.preselect,\"disabled\":!_vm.editable,\"deselectLabel\":_vm.deselectLabel,\"taggable\":_vm.taggable,\"tagPlaceholder\":_vm.tagPlaceholder,\"openDirection\":_vm.openDirection},on:{\"tag\":_vm.addValue},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),(_vm.showDetails)?_c('button',{attrs:{\"type\":\"button\",\"title\":\"Details\"},on:{\"click\":function($event){return _vm.$emit('onDetails')}}},[_c('i',{staticClass:\"fas fa-info\"})]):_vm._e()]:_c('div',{staticClass:\"loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_vm._v(\" Loading options...\")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"select-container\">\n\t\t<template v-if=\"loaded\">\n\t\t\t<MultiSelect v-model=\"selected\" :key=\"type\" ref=\"htmlElement\" label=\"label\" track-by=\"id\" :multiple=\"multiple\" :options=\"selectOptions\" :allowEmpty=\"false\" :preselectFirst=\"preselect\" :disabled=\"!editable\" :deselectLabel=\"deselectLabel\" :taggable=\"taggable\" :tagPlaceholder=\"tagPlaceholder\" :openDirection=\"openDirection\" @tag=\"addValue\"></MultiSelect>\n\t\t\t<button v-if=\"showDetails\" type=\"button\" title=\"Details\" @click=\"$emit('onDetails')\"><i class=\"fas fa-info\"></i></button>\n\t\t</template>\n\t\t<div class=\"loading\" v-else><i class=\"fas fa-spinner fa-spin\"></i> Loading options...</div>\n\t</div>\n</template>\n\n<script>\nimport MultiSelect from 'vue-multiselect'\nimport Utils from '../../utils';\n\nexport default {\n\tname: 'SelectBox',\n\tcomponents: {\n\t\tMultiSelect\n\t},\n\tprops: {\n\t\tvalue: {},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: \"\"\n\t\t},\n\t\teditable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\toptions: {\n\t\t\ttype: [Array, Object]\n\t\t},\n\t\tschema: {\n\t\t\ttype: Object\n\t\t},\n\t\tcontext: {},\n\t\toptionFilter: {\n\t\t\ttype: Function,\n\t\t\tdefault: null\n\t\t},\n\t\topenDirection: {\n\t\t\ttype: String,\n\t\t\tdefault: 'auto'\n\t\t}\n\t},\n\tcomputed: {\n\t\tselectOptions() {\n\t\t\tlet state = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tlet collection = this.$store.state.collections.find(c => c.id == this.context);\n\t\t\t\t\tif (Utils.isObject(collection)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstate = collection.summaries['bands'].map(band => band.name);\n\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\tif (state.length === 0 && Utils.isObject(collection['cube:dimensions'])) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlet bandDimension = Object.values(collection['cube:dimensions']).find(d => d.type === 'bands');\n\t\t\t\t\t\t\t\tif (bandDimension && Array.isArray(bandDimension.values)) {\n\t\t\t\t\t\t\t\t\tstate = bandDimension.values;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\tstate = this.$store.state.collections;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'job-id':\n\t\t\t\t\tstate = this.$store.state.jobs.jobs;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\tstate = this.$store.state.files.files;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tstate = this.$store.state.editor.epsgCodes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'input-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getInputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tlet t = require('./api');\n\t\t\t\t\tlet types = {};\n\t\t\t\t\tfor(let native of t.NATIVE_TYPES) {\n\t\t\t\t\t\ttypes[native] = {type: native}\n\t\t\t\t\t}\n\t\t\t\t\tstate = Object.assign(types, t.API_TYPES);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'output-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getOutputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tstate = this.$store.state.serviceTypes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\tstate = this.$store.state.connection.capabilities().listPlans();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\t\tstate = Object.keys(this.$store.state.udfRuntimes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tstate = this.context in this.$store.state.udfRuntimes ? Object.keys(this.$store.state.udfRuntimes[this.context].versions) : [];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tstate = this.options;\n\t\t\t}\n\n\t\t\tif (typeof this.optionFilter === 'function' && state && typeof state === 'object') {\n\t\t\t\tif (Utils.isObject(state)) {\n\t\t\t\t\tstate = Object.fromEntries(Object.entries(state).filter(([key, value]) => this.optionFilter(value, key)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstate = state.filter((value, key) => this.optionFilter(value, key));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet data = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\treturn state.map(c => this.e(c.id)).sort(this.sortByLabel);\n\t\t\t\tcase 'job-id':\n\t\t\t\t\treturn state.map(j => ({\n\t\t\t\t\t\tid: j.id,\n\t\t\t\t\t\tlabel: Utils.getResourceTitle(j)\n\t\t\t\t\t})).sort(this.sortByLabel);\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tfor(let type in state) {\n\t\t\t\t\t\tlet schema = state[type];\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: type,\n\t\t\t\t\t\t\tlabel: schema.title || Utils.prettifyString(type),\n\t\t\t\t\t\t\tvalue: schema\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\treturn state.map(f => this.e(f.path)).sort((a, b) => Utils.sortByPath(a.id, b.id));\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: Number.parseInt(key, 10),\n\t\t\t\t\t\t\tlabel: key + \": \" + state[key]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'input-format':\n\t\t\t\tcase 'output-format':\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tlet id = key.toUpperCase(); // uppercase mostly for services\n\t\t\t\t\t\t// show title if available...\n\t\t\t\t\t\tlet label = state[key].title;\n\t\t\t\t\t\t// otherwise upper-cased key...\n\t\t\t\t\t\tif (!label) {\n\t\t\t\t\t\t\tlabel = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// and if title is different from key, also show key\n\t\t\t\t\t\telse if (id !== label.toUpperCase()) {\n\t\t\t\t\t\t\tlabel = `${label} - ${id}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.push({id, label});\n\t\t\t\t\t}\n\t\t\t\t\treturn data.sort(this.sortByLabel);\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\treturn state.map(p => ({\n\t\t\t\t\t\tid: p.name,\n\t\t\t\t\t\tlabel: p.name + (p.paid ? ' (paid)' : ' (free)')\n\t\t\t\t\t}));\n\t\t\t\tcase 'year':\n\t\t\t\t\tlet thisYear = new Date().getFullYear();\n\t\t\t\t\tlet years = Array.from({length: 100}, (x,i) => this.e(String(thisYear - i)));\n\t\t\t\t\t// Add custom years to select box\n\t\t\t\t\tif (typeof this.value === 'string' && this.value.length > 0 && years.findIndex(y => y.id === this.value) === -1) {\n\t\t\t\t\t\tvar customYear = this.e(this.value);\n\t\t\t\t\t\tif (this.value > thisYear) {\n\t\t\t\t\t\t\tyears.unshift(customYear);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tyears.push(this.e(this.value));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn years;\n\t\t\t\tcase 'band-name':\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\treturn state.map(val => this.e(val));\n\t\t\t\tdefault:\n\t\t\t\t\tif (Utils.isObject(this.schema) && this.schema.isEnum()) {\n\t\t\t\t\t\treturn this.schema.getEnumChoices().map(val => this.e(val));\n\t\t\t\t\t}\n\t\t\t\t\telse if (Array.isArray(this.options)) {\n\t\t\t\t\t\treturn this.options.map(val => {\n\t\t\t\t\t\t\tif (Utils.isObject(val)) {\n\t\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn this.e(val)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowDetails() {\n\t\t\treturn (this.type === 'collection-id');\n\t\t},\n\t\tdeselectLabel() {\n\t\t\treturn this.multiple ? 'Press enter to remove' : '';\n\t\t},\n\t\ttagPlaceholder() {\n\t\t\treturn this.type === 'year' ? 'Press enter to select' : 'Press enter to create a tag';\n\t\t},\n\t\tmultiple() {\n\t\t\treturn (this.type === 'file-paths');\n\t\t},\n\t\ttaggable() {\n\t\t\tlet freeInputIfEmpty = ['band-name', 'collection-id', 'job-id', 'input-format', 'output-format'];\n\t\t\treturn (this.type === 'year' || (this.selectOptions.length === 0 && freeInputIfEmpty.includes(this.type)));\n\t\t},\n\t\tpreselect() {\n\t\t\tif (this.multiple) {\n\t\t\t\treturn (!Array.isArray(this.selected) || this.selected.length === 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn (this.selected === null);\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tselected: null,\n\t\t\tloaded: false\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.loadData();\n\t},\n\twatch: {\n\t\ttype() {\n\t\t\tthis.loadData();\n\t\t},\n\t\tselected(newValue) {\n\t\t\tlet value;\n\t\t\tif (newValue === null) {\n\t\t\t\tvalue = null;\n\t\t\t}\n\t\t\telse if (this.multiple) {\n\t\t\t\tif (!Array.isArray(newValue)) {\n\t\t\t\t\tnewValue = [newValue];\n\t\t\t\t}\n\t\t\t\tvalue = newValue.map(v => v.id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'epsg-code':\n\t\t\t\t\t\tvar num = Number.parseInt(newValue.id);\n\t\t\t\t\t\tvalue = Number.isNaN(num) ? null : num;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\t\tvalue = newValue.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tvalue = String(newValue.id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalue = newValue.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$emit('input', value);\n\t\t},\n\t\tcontext() {\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.preselectFirst();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.loadData();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\t...Utils.mapActions(['describeCollection']),\n\t\t...Utils.mapActions('editor', ['loadEpsgCodes']),\n\t\t// Convert a value to a option object for MultiSelect\n\t\te(val) {\n\t\t\treturn {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t},\n\t\tasync loadData() {\n\t\t\tthis.loaded = false;\n\t\t\tif (this.type === 'epsg-code') {\n\t\t\t\tawait this.loadEpsgCodes();\n\t\t\t}\n\t\t\telse if (this.type === 'band-name') {\n\t\t\t\tawait this.describeCollection(this.context);\n\t\t\t}\n\t\t\tthis.initSelection();\n\t\t\tthis.loaded = true;\n\t\t},\n\t\tasync preselectFirst() {\n\t\t\tawait this.$nextTick();\n\t\t\t// Preselect first element if nothing else is set.\n\t\t\tlet elem = this.$refs.htmlElement;\n\t\t\t// Code inspired from mounted() method in vue-multiselect's multiselectMixin.js\n\t\t\tif (elem.preselectFirst && Array.isArray(elem.filteredOptions) && elem.filteredOptions.length) {\n\t\t\t\telem.select(elem.filteredOptions[0]);\n\t\t\t}\n\t\t},\n\t\tinitSelection() {\n\t\t\tlet value = typeof this.value === 'undefined' ? this.schema.default() : this.value;\n\t\t\tif (this.multiple && Array.isArray(value)) {\n\t\t\t\tthis.selected = this.selectOptions.filter(o => value.includes(o.id));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'input-format':\n\t\t\t\t\tcase 'output-format':\n\t\t\t\t\tcase 'service-type':\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tvalue = value.toUpperCase();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet selectedOption = this.selectOptions.find(o => o.id === value);\n\t\t\t\tif (selectedOption !== undefined) {\n\t\t\t\t\tthis.selected = selectedOption;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsortByLabel(a,b) {\n\t\t\treturn Utils.compareStringCaseInsensitive(a.label, b.label);\n\t\t},\n\t\taddValue(value) {\n\t\t\tthis.selected = this.e(value);\n\t\t}\n\t}\n}\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style lang=\"scss\">\n@use '../../../theme' as *;\n\n.select-container {\n\tdisplay: flex;\n\tflex-grow: 1;\n\n\t> div {\n\t\tflex-grow: 1;\n\t}\n\n\t> button {\n\t\tmargin-left: 10px;\n\t}\n\n\t.multiselect__option--selected.multiselect__option--highlight {\n\t\tbackground: $mainColor;\n\t}\n\t.multiselect__option--highlight, .multiselect__option--highlight:after {\n\t\tbackground: $mainColor;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SelectBox.vue?vue&type=template&id=a2cb86ae\"\nimport script from \"./SelectBox.vue?vue&type=script&lang=js\"\nexport * from \"./SelectBox.vue?vue&type=script&lang=js\"\nimport style0 from \"vue-multiselect/dist/vue-multiselect.min.css?vue&type=style&index=0&prod&lang=css&external\"\nimport style1 from \"./SelectBox.vue?vue&type=style&index=1&id=a2cb86ae&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"step choose-format\"},[_c('p',[_vm._v(\"Please select the file format you want to download data in.\")]),_c('SelectBox',{attrs:{\"type\":\"output-format\",\"value\":_vm.value,\"optionFilter\":_vm.filterFormats},on:{\"input\":_vm.setFormat}}),(_vm.scale !== null)?_c('p',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.scaleBox),expression:\"scaleBox\"}],attrs:{\"type\":\"checkbox\",\"id\":\"scale\"},domProps:{\"checked\":Array.isArray(_vm.scaleBox)?_vm._i(_vm.scaleBox,null)>-1:(_vm.scaleBox)},on:{\"change\":function($event){var $$a=_vm.scaleBox,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.scaleBox=$$a.concat([$$v]))}else{$$i>-1&&(_vm.scaleBox=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.scaleBox=$$c}}}}),_vm._v(\"  \"),_c('label',{attrs:{\"for\":\"scale\"}},[_vm._v(\"Scale the values from [-1, 1] to [0, 255] (often required for PNG, GIF or JPEG).\")])]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"step choose-format\">\n\t\t<p>Please select the file format you want to download data in.</p>\n\t\t<SelectBox type=\"output-format\" :value=\"value\" @input=\"setFormat\" :optionFilter=\"filterFormats\" />\n\t\t<p v-if=\"scale !== null\">\n\t\t\t<input type=\"checkbox\" id=\"scale\" v-model=\"scaleBox\" />&nbsp;\n\t\t\t<label for=\"scale\">Scale the values from [-1, 1] to [0, 255] (often required for PNG, GIF or JPEG).</label>\n\t\t</p> \n\t</div>\n</template>\n\n<script>\nimport SelectBox from '../../datatypes/SelectBox.vue';\n\nexport default {\n\tname: 'ChooseFormat',\n\tcomponents: {\n\t\tSelectBox\n\t},\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\tdefault: null\n\t\t},\n\t\tscale: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: null\n\t\t},\n\t\tgisDataType: {\n\t\t\ttype: String,\n\t\t\tdefault: null\n\t\t}\n\t},\n\tcomputed: {\n\t\tscaleBox: {\n\t\t\tget() {\n\t\t\t\treturn this.scale;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$emit('update:scale', value);\n\t\t\t}\n\t\t},\n\t\tfilterFormats() {\n\t\t\tif (!this.gisDataType) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn format => !Array.isArray(format.gis_data_types) || format.gis_data_types.length === 0 || format.gis_data_types.includes(this.gisDataType);\n\t\t}\n\t},\n\tmethods: {\n\t\tsetFormat(format) {\n\t\t\tthis.scaleBox = ['bmp', 'gif', 'jpeg', 'jpg', 'png', 'webp'].includes(format.toLowerCase());\n\t\t\tthis.$emit('input', format);\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseFormat.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseFormat.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ChooseFormat.vue?vue&type=template&id=399a88f0\"\nimport script from \"./ChooseFormat.vue?vue&type=script&lang=js\"\nexport * from \"./ChooseFormat.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["API_TYPES","Utils","resolveJsonRefs","require","definitions","NATIVE_TYPES","render","_vm","this","_c","_self","staticClass","loaded","key","type","ref","attrs","multiple","selectOptions","preselect","editable","deselectLabel","taggable","tagPlaceholder","openDirection","on","addValue","model","value","selected","callback","$$v","expression","showDetails","$event","$emit","_e","_v","staticRenderFns","name","components","MultiSelect","props","String","default","Boolean","options","Array","Object","schema","context","optionFilter","Function","computed","state","collection","$store","collections","find","c","id","isObject","summaries","map","band","error","length","bandDimension","values","d","isArray","jobs","files","editor","epsgCodes","fileFormats","getInputTypes","t","types","native","assign","getOutputTypes","serviceTypes","connection","capabilities","listPlans","keys","udfRuntimes","versions","fromEntries","entries","filter","data","e","sort","sortByLabel","j","label","getResourceTitle","push","title","prettifyString","f","path","a","b","sortByPath","Number","parseInt","toUpperCase","p","paid","thisYear","Date","getFullYear","years","from","x","i","findIndex","y","customYear","unshift","val","isEnum","getEnumChoices","freeInputIfEmpty","includes","created","loadData","watch","newValue","v","num","isNaN","preselectFirst","methods","mapActions","loadEpsgCodes","describeCollection","initSelection","$nextTick","elem","$refs","htmlElement","filteredOptions","select","o","selectedOption","undefined","compareStringCaseInsensitive","component","filterFormats","setFormat","scale","directives","rawName","scaleBox","domProps","_i","$$a","$$el","target","$$c","checked","$$i","concat","slice","SelectBox","gisDataType","get","set","format","gis_data_types","toLowerCase"],"sourceRoot":""}